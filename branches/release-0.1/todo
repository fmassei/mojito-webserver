| directory listing
? compression
? request correctness check
*** IMPORTANT - cache shm module and random cache drops
*** IMPORTANT - cache don't check content dates before sending!
*** MISSING THE IMPORTANT 5.2 POINT OF HTTP/1.1 COMPLIANCE!
Insert a #define like "let_it_leek" and remove the free()s :-)
Check if the gzip/deflate stuff is correctly done!
Insert a #define to remove all the quality header parsing
Insert something to decide when to use a filter or not
Add the possibility to have more filters at the output (there's everything, just
    dequeue insted of calling only the first callback)
Test the "Accept-Encoding: *" and similar cases
Change CHUNK dimension for compression filters to a value related to the stream
    type.
Update website documentation (conformance)
Update website documentation (config parameters (server_meta))
Check if the temporary directory is writable
Adjust log levels
buffer overflow checks
cache drop if newer file found (maybe configurable?)
default error pages
statistics for internal variables, like cache-hits or keep-alive connections
sigint to reload the config
Adjust logs to match the apache ones
try to remove some realloc(), increasing the buffers
check what happens in a header() call in a PHP script while executing in a CGI
    evironment
stderr set for cgi apps

check for known exploit and try to solve them:
    1- on post requests, we wait for content-lenght post data to be received. An
        attacker could declare a bigger content-lenght on many requests: mojito
        will spawn a child for each request, suffering a DOS attack. A possible
        solution is to insert a timeout (maybe an adaptive one based on header
        speed?)
    2- check what happens if an incomplete header is sent. This situation 
        should be dealt right, but it's better to check with a specific 
        program ;-)
    3- Mojito will run cgi with post_fd put on stdin only if some post-data has
        been sent by the client: otherwise it will not detach the parent stdin,
        leaving the control to the cgi app. Check if this could be harmful and
        find a solution.
